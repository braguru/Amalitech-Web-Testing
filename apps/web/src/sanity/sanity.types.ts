/**
 * ---------------------------------------------------------------------------------
 * This file has been generated by Sanity TypeGen.
 * Command: `sanity typegen generate`
 *
 * Any modifications made directly to this file will be overwritten the next time
 * the TypeScript definitions are generated. Please make changes to the Sanity
 * schema definitions and/or GROQ queries if you need to update these types.
 *
 * For more information on how to use Sanity TypeGen, visit the official documentation:
 * https://www.sanity.io/docs/sanity-typegen
 * ---------------------------------------------------------------------------------
 */

// Source: schema.json
export type SanityImagePaletteSwatch = {
  _type: 'sanity.imagePaletteSwatch'
  background?: string
  foreground?: string
  population?: number
  title?: string
}

export type SanityImagePalette = {
  _type: 'sanity.imagePalette'
  darkMuted?: SanityImagePaletteSwatch
  lightVibrant?: SanityImagePaletteSwatch
  darkVibrant?: SanityImagePaletteSwatch
  vibrant?: SanityImagePaletteSwatch
  dominant?: SanityImagePaletteSwatch
  lightMuted?: SanityImagePaletteSwatch
  muted?: SanityImagePaletteSwatch
}

export type SanityImageDimensions = {
  _type: 'sanity.imageDimensions'
  height?: number
  width?: number
  aspectRatio?: number
}

export type SanityFileAsset = {
  _id: string
  _type: 'sanity.fileAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  source?: SanityAssetSourceData
}

export type Geopoint = {
  _type: 'geopoint'
  lat?: number
  lng?: number
  alt?: number
}

export type Demo = {
  _id: string
  _type: 'demo'
  _createdAt: string
  _updatedAt: string
  _rev: string
  slug?: Slug
  title?: string
  body?: Array<
    | ({
        _key: string
      } & Link)
    | ({
        _key: string
      } & Text_definition)
    | ({
        _key: string
      } & Headline)
    | ({
        _key: string
      } & Numbers_module)
    | ({
        _key: string
      } & ImageSliderModule)
  >
}

export type Slug = {
  _type: 'slug'
  current?: string
  source?: string
}

export type ImageSliderModule = {
  _type: 'imageSliderModule'
  headline?: string
  text?: string
  cta?: Array<
    {
      _key: string
    } & Link
  >
  orientation?: 'portrait' | 'landscape'
  autoplay?: boolean
  slides?: Array<
    {
      _key: string
    } & ImageSlidesType
  >
}

export type Numbers_module = {
  _type: 'numbers_module'
  layout?: 'default' | 'two_column' | 'stepper'
  caption?: string
  headline?: string
  description?: string
  background_image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  image?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  image_right?: boolean
  symbol?: 'percentage' | 'plus'
  stepper_theme?: 'mixed' | 'primary-alt'
  grid_theme?: 'dark' | 'light'
  numbers?: Array<
    {
      _key: string
    } & Number_tile
  >
}

export type ImageSlidesType = {
  _type: 'imageSlidesType'
  slideImage?: {
    asset?: {
      _ref: string
      _type: 'reference'
      _weak?: boolean
      [internalGroqTypeReferenceTo]?: 'sanity.imageAsset'
    }
    hotspot?: SanityImageHotspot
    crop?: SanityImageCrop
    _type: 'image'
  }
  caption?: string
}

export type SanityImageCrop = {
  _type: 'sanity.imageCrop'
  top?: number
  bottom?: number
  left?: number
  right?: number
}

export type SanityImageHotspot = {
  _type: 'sanity.imageHotspot'
  x?: number
  y?: number
  height?: number
  width?: number
}

export type SanityImageAsset = {
  _id: string
  _type: 'sanity.imageAsset'
  _createdAt: string
  _updatedAt: string
  _rev: string
  originalFilename?: string
  label?: string
  title?: string
  description?: string
  altText?: string
  sha1hash?: string
  extension?: string
  mimeType?: string
  size?: number
  assetId?: string
  uploadId?: string
  path?: string
  url?: string
  metadata?: SanityImageMetadata
  source?: SanityAssetSourceData
}

export type SanityAssetSourceData = {
  _type: 'sanity.assetSourceData'
  name?: string
  id?: string
  url?: string
}

export type SanityImageMetadata = {
  _type: 'sanity.imageMetadata'
  location?: Geopoint
  dimensions?: SanityImageDimensions
  palette?: SanityImagePalette
  lqip?: string
  blurHash?: string
  hasAlpha?: boolean
  isOpaque?: boolean
}

export type Number_tile = {
  _type: 'number_tile'
  value?: number
  caption?: string
  description?: string
}

export type Headline = {
  _type: 'headline'
  headline?: string
}

export type Text_definition = {
  _type: 'text_definition'
  text?: string
}

export type Link = {
  _type: 'link'
  label?: string
  external?: boolean
  internal?: {
    _ref: string
    _type: 'reference'
    _weak?: boolean
    [internalGroqTypeReferenceTo]?: 'page'
  }
  url?: string
  color?: 'primary' | 'primary-alt' | 'secondary'
}

export type Page = {
  _id: string
  _type: 'page'
  _createdAt: string
  _updatedAt: string
  _rev: string
  title?: string
  body?: Array<
    {
      _key: string
    } & Link
  >
}

export type AllSanitySchemaTypes =
  | SanityImagePaletteSwatch
  | SanityImagePalette
  | SanityImageDimensions
  | SanityFileAsset
  | Geopoint
  | Demo
  | Slug
  | ImageSliderModule
  | Numbers_module
  | ImageSlidesType
  | SanityImageCrop
  | SanityImageHotspot
  | SanityImageAsset
  | SanityAssetSourceData
  | SanityImageMetadata
  | Number_tile
  | Headline
  | Text_definition
  | Link
  | Page
export declare const internalGroqTypeReferenceTo: unique symbol
